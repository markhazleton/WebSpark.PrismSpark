// Auto generated by ./transform.js
using WebSpark.PrismSpark;

namespace WebSpark.PrismSpark.Languages;

// From https://github.com/PrismJS/prism/blob/master/components/prism-bash.js

/// <summary>
/// Provides syntax highlighting grammar definition for Bash shell scripting language.
/// Supports Bash syntax including shebang, comments, strings, variables, functions, and shell commands.
/// </summary>
public class Bash : IGrammarDefinition
{
  /// <summary>
  /// Defines the grammar rules for Bash syntax highlighting.
  /// </summary>
  /// <returns>A Grammar object containing the token definitions for Bash shell script syntax.</returns>
  public Grammar Define()
  {
    var grammar = new Grammar();

    grammar["shebang"] = new GrammarToken[]
    {

        new(@"^#!\s*\/.*", lookbehind: false, greedy: false, alias: new []{"important" }),
    };
    grammar["comment"] = new GrammarToken[]
    {

        new(@"(^|[^""{\\$])#.*", lookbehind: true, greedy: false),
    };
    grammar["function-name"] = new GrammarToken[]
    {

        new(@"(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)", lookbehind: true, greedy: false, alias: new []{"function" }),
        new(@"\b[\w-]+(?=\s*\(\s*\)\s*\{)", lookbehind: false, greedy: false, alias: new []{"function" }),
    };
    grammar["for-or-select"] = new GrammarToken[]
    {

        new(@"(\b(?:for|select)\s+)\w+(?=\s+in\s)", lookbehind: true, greedy: false, alias: new []{"variable" }),
    };
    grammar["assign-left"] = new GrammarToken[]
    {

        new(@"(^|[\s;|&]|[<>]\()\w+(?=\+?=)", lookbehind: true, greedy: false, alias: new []{"variable" }, inside: new Grammar
  {
      ["environment"] = new GrammarToken[]
      {

        new(@"(^|[\s;|&]|[<>]\()\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\b", lookbehind: true, greedy: false, alias: new []{"constant" }),
      },
  }),
    };
    grammar["string"] = new GrammarToken[]
    {

        new(@"((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["bash"] = new GrammarToken[]
      {

        new(@"(^([""']?)\w+\2)[ \t]+\S.*", lookbehind: true, greedy: false, alias: new []{"punctuation" }, inside: null! /* see below */),
      },
      ["environment"] = new GrammarToken[]
      {

        new(@"\$\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\b", lookbehind: false, greedy: false, alias: new []{"constant" }),
      },
      ["variable"] = new GrammarToken[]
      {

        new(@"\$?\(\([\s\S]+?\)\)", lookbehind: false, greedy: true, inside: new Grammar
  {
      ["variable"] = new GrammarToken[]
      {

        new(@"(^\$\(\([\s\S]+)\)\)", lookbehind: true, greedy: false),
        new(@"^\$\(\(", lookbehind: false, greedy: false),
      },
      ["number"] = new GrammarToken[]
      {

        new(@"\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?", lookbehind: false, greedy: false),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@"--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]", lookbehind: false, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\(\(?|\)\)?|,|;", lookbehind: false, greedy: false),
      },
  }),
        new(@"\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`", lookbehind: false, greedy: true, inside: new Grammar
  {
      ["variable"] = new GrammarToken[]
      {

        new(@"^\$\(|^`|\)$|`$", lookbehind: false, greedy: false),
      },
      ["comment"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["function-name"] = new GrammarToken[]
      {

        null! /* see below */,
        null! /* see below */,
      },
      ["for-or-select"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["assign-left"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["string"] = new GrammarToken[]
      {

        null! /* see below */,
        new(@"((?:^|[^<])<<-?\s*)([""'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["bash"] = new GrammarToken[]
      {
        null! /* see below */
      },
  }),
        new(@"(^|[^\\](?:\\\\)*)""(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^""\\`$])*""", lookbehind: true, greedy: true, inside: null! /* see below */),
        new(@"(^|[^$\\])'[^']*'", lookbehind: true, greedy: true),
        new(@"\$'(?:[^'\\]|\\[\s\S])*'", lookbehind: false, greedy: true, inside: new Grammar
  {
      ["entity"] = new GrammarToken[]
      {

        new(@"\\(?:[abceEfnrtv\\""]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})", lookbehind: false, greedy: false),
      },
  }),
      },
      ["environment"] = new GrammarToken[]
      {

        new(@"\$?\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\b", lookbehind: false, greedy: false, alias: new []{"constant" }),
      },
      ["function"] = new GrammarToken[]
      {

        new(@"(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])", lookbehind: true, greedy: false),
      },
      ["keyword"] = new GrammarToken[]
      {

        new(@"(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])", lookbehind: true, greedy: false),
      },
      ["builtin"] = new GrammarToken[]
      {

        new(@"(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])", lookbehind: true, greedy: false, alias: new []{"class-name" }),
      },
      ["boolean"] = new GrammarToken[]
      {

        new(@"(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])", lookbehind: true, greedy: false),
      },
      ["file-descriptor"] = new GrammarToken[]
      {

        new(@"\B&\d\b", lookbehind: false, greedy: false, alias: new []{"important" }),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@"\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["file-descriptor"] = new GrammarToken[]
      {

        new(@"^\d", lookbehind: false, greedy: false, alias: new []{"important" }),
      },
  }),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\$?\(\(?|\)\)?|\.\.|[{}[\];\\]", lookbehind: false, greedy: false),
      },
      ["number"] = new GrammarToken[]
      {

        new(@"(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b", lookbehind: true, greedy: false),
      },
  }),
        new(@"\$\{[^}]+\}", lookbehind: false, greedy: true, inside: new Grammar
  {
      ["operator"] = new GrammarToken[]
      {

        new(@":[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?", lookbehind: false, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[\[\]]", lookbehind: false, greedy: false),
      },
      ["environment"] = new GrammarToken[]
      {

        new(@"(\{)\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\b", lookbehind: true, greedy: false, alias: new []{"constant" }),
      },
  }),
        new(@"\$(?:\w+|[#?*!@$])", lookbehind: false, greedy: false),
      },
      ["entity"] = new GrammarToken[]
      {

        new(@"\\(?:[abceEfnrtv\\""]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})", lookbehind: false, greedy: false),
      },
  }),
        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
    };
    grammar["environment"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["variable"] = new GrammarToken[]
    {

        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
        new(@"\$(?:\w+|[#?*!@$])", lookbehind: false, greedy: false),
    };
    grammar["function"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["keyword"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["builtin"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["boolean"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["file-descriptor"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["operator"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["punctuation"] = new GrammarToken[]
    {

        new(@"\$?\(\(?|\)\)?|\.\.|[{}[\];\\]", lookbehind: false, greedy: false),
    };
    grammar["number"] = new GrammarToken[]
    {

        null! /* see below */,
    };
    grammar["string"][0].Inside!["bash"][0].Inside = grammar;
    grammar["string"][0].Inside!["variable"][1].Inside!["comment"][0] = grammar["comment"][0];
    grammar["string"][0].Inside!["variable"][1].Inside!["function-name"][0] = grammar["function-name"][0];
    grammar["string"][0].Inside!["variable"][1].Inside!["function-name"][1] = grammar["function-name"][1];
    grammar["string"][0].Inside!["variable"][1].Inside!["for-or-select"][0] = grammar["for-or-select"][0];
    grammar["string"][0].Inside!["variable"][1].Inside!["assign-left"][0] = grammar["assign-left"][0];
    grammar["string"][0].Inside!["variable"][1].Inside!["string"][0] = grammar["string"][0];
    grammar["string"][0].Inside!["variable"][1].Inside!["string"][1].Inside!["bash"][0] = grammar["string"][0].Inside!["bash"][0];
    grammar["string"][0].Inside!["variable"][1].Inside!["string"][2].Inside = grammar["string"][0].Inside!;
    grammar["string"][1] = grammar["string"][0].Inside!["variable"][1].Inside!["string"][1];
    grammar["string"][2] = grammar["string"][0].Inside!["variable"][1].Inside!["string"][2];
    grammar["string"][3] = grammar["string"][0].Inside!["variable"][1].Inside!["string"][3];
    grammar["string"][4] = grammar["string"][0].Inside!["variable"][1].Inside!["string"][4];
    grammar["environment"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["environment"][0];
    grammar["variable"][0] = grammar["string"][0].Inside!["variable"][0];
    grammar["variable"][1] = grammar["string"][0].Inside!["variable"][1];
    grammar["variable"][2] = grammar["string"][0].Inside!["variable"][2];
    grammar["function"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["function"][0];
    grammar["keyword"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["keyword"][0];
    grammar["builtin"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["builtin"][0];
    grammar["boolean"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["boolean"][0];
    grammar["file-descriptor"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["file-descriptor"][0];
    grammar["operator"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["operator"][0];
    grammar["number"][0] = grammar["string"][0].Inside!["variable"][1].Inside!["number"][0];

    return grammar;
  }
}
