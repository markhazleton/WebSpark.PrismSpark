// Auto generated by ./transform.js
using System.Text.RegularExpressions;
using WebSpark.PrismSpark;

namespace WebSpark.PrismSpark.Languages;

// From https://github.com/PrismJS/prism/blob/master/components/prism-cshtml.js

/// <summary>
/// Provides syntax highlighting grammar definition for ASP.NET Core Razor (.cshtml) files.
/// Supports Razor syntax including HTML markup, C# code blocks, Razor comments, and server-side expressions.
/// </summary>
public class CSHtml : IGrammarDefinition
{
  /// <summary>
  /// Defines the grammar rules for Razor/CSHTML syntax highlighting.
  /// </summary>
  /// <returns>A Grammar object containing the token definitions for Razor template syntax.</returns>
  public Grammar Define()
  {
    var grammar = new Grammar();

    grammar["comment"] = new GrammarToken[]
    {

        new(@"<!--(?:(?!<!--)[\s\S])*?-->", lookbehind: false, greedy: true),
    };
    grammar["razor-comment"] = new GrammarToken[]
    {

        new(@"@\*[\s\S]*?\*@", lookbehind: false, greedy: true, alias: new []{"comment" }),
    };
    grammar["block"] = new GrammarToken[]
    {

        new(@"(^|[^@])@(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}|(?:code|functions)\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}|(?:for|foreach|lock|switch|using|while)\s*\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}|do\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}\s*while\s*\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)(?:\s*;)?|try\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}\s*catch\s*\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}\s*finally\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}|if\s*\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\}(?:\s*else(?:\s+if\s*\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))?\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\})*|helper\s+\w+\s*\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)\s*\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\{(?:[^{}'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\}))*\}))*\}))*\})", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["keyword"] = new GrammarToken[]
      {

        new(@"^@\w*", lookbehind: false, greedy: false),
      },
      ["csharp"] = new GrammarToken[]
      {

        new(@"\S[\s\S]*", lookbehind: false, greedy: false, alias: new []{"language-csharp" }, inside: new Grammar
  {
      ["comment"] = new GrammarToken[]
      {

        new(@"(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)", lookbehind: true, greedy: true),
        new(@"(^|[^\\:])\/\/.*", lookbehind: true, greedy: true),
      },
      ["interpolation-string"] = new GrammarToken[]
      {

        new(@"(^|[^\\])(?:\$@|@\$)""(?:""""|\\[\s\S]|\{\{|(?:\{(?!\{)(?:(?![}:])(?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\([^\s\S]*\))*\))*\))*\)))*(?::[^}\r\n]+)?\})|[^\\{""])*""", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["interpolation"] = new GrammarToken[]
      {

        new(@"((?:^|[^{])(?:\{\{)*)(?:\{(?!\{)(?:(?![}:])(?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\([^\s\S]*\))*\))*\))*\)))*(?::[^}\r\n]+)?\})", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["format-string"] = new GrammarToken[]
      {

        new(@"(^\{(?:(?![}:])(?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\([^\s\S]*\))*\))*\))*\)))*)(?::[^}\r\n]+)(?=\}$)", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^:", lookbehind: false, greedy: false),
      },
  }),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^\{|\}$", lookbehind: false, greedy: false),
      },
      ["expression"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"language-csharp" }, inside: new Grammar
  {
      ["comment"] = new GrammarToken[]
      {

        null! /* see below */,
        null! /* see below */,
      },
      ["interpolation-string"] = new GrammarToken[]
      {

        null! /* see below */,
        new(@"(^|[^@\\])\$""(?:\\.|\{\{|(?:\{(?!\{)(?:(?![}:])(?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\([^\s\S]*\))*\))*\))*\)))*(?::[^}\r\n]+)?\})|[^\\""{])*""", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["interpolation"] = new GrammarToken[]
      {

        new(@"((?:^|[^{])(?:\{\{)*)(?:\{(?!\{)(?:(?![}:])(?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\([^\s\S]*\))*\))*\))*\)))*(?::[^}\r\n]+)?\})", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["format-string"] = new GrammarToken[]
      {

        new(@"(^\{(?:(?![}:])(?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\((?:[^""'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})')|\([^\s\S]*\))*\))*\))*\)))*)(?::[^}\r\n]+)(?=\}$)", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^:", lookbehind: false, greedy: false),
      },
  }),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^\{|\}$", lookbehind: false, greedy: false),
      },
      ["expression"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"language-csharp" }, inside: null! /* see below */),
      },
  }),
      },
      ["string"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false),
      },
  }),
      },
      ["char"] = new GrammarToken[]
      {

        new(@"'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'", lookbehind: false, greedy: true),
      },
      ["string"] = new GrammarToken[]
      {

        new(@"(^|[^$\\])(?:@""(?:""""|\\[\s\S]|[^\\""])*""(?!""))", lookbehind: true, greedy: true),
        new(@"(^|[^@$\\])(?:""(?:\\.|[^\\""\r\n])*"")", lookbehind: true, greedy: true),
      },
      ["namespace"] = new GrammarToken[]
      {

        new(@"(\b(?:namespace|using)\s+)(?:@?\b[A-Za-z_]\w*\b)(?:\s*\.\s*(?:@?\b[A-Za-z_]\w*\b))*(?=\s*[;{])", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\.", lookbehind: false, greedy: false),
      },
  }),
      },
      ["type-expression"] = new GrammarToken[]
      {

        new(@"(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\)))*(?=\s*\))", lookbehind: true, greedy: false, alias: new []{"class-name" }, inside: new Grammar
  {
      ["keyword"] = new GrammarToken[]
      {

        new(@"\b(?:bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var|void|class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b", lookbehind: false, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[<>()?,.:[\]]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["return-type"] = new GrammarToken[]
      {

        new(@"(?:(?:(?:\((?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+(?:,(?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+)+\))|(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*))(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?)(?=\s+(?:(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*)\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))", lookbehind: false, greedy: false, alias: new []{"class-name" }, inside: null! /* see below */),
      },
      ["constructor-invocation"] = new GrammarToken[]
      {

        new(@"(\bnew\s+)(?:(?:(?:\((?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+(?:,(?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+)+\))|(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*))(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?)(?=\s*[[({])", lookbehind: true, greedy: false, alias: new []{"class-name" }, inside: null! /* see below */),
      },
      ["generic-method"] = new GrammarToken[]
      {

        new(@"(?:@?\b[A-Za-z_]\w*\b)\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)(?=\s*\()", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["function"] = new GrammarToken[]
      {

        new(@"^(?:@?\b[A-Za-z_]\w*\b)", lookbehind: false, greedy: false),
      },
      ["generic"] = new GrammarToken[]
      {

        new(@"<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>", lookbehind: false, greedy: false, alias: new []{"class-name" }, inside: null! /* see below */),
      },
  }),
      },
      ["type-list"] = new GrammarToken[]
      {

        new(@"\b((?:(?:\b(?:class|enum|interface|record|struct)\b)\s+(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)|record\s+(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)\s*(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|where\s+(?:@?\b[A-Za-z_]\w*\b))\s*:\s*)(?:(?:(?:(?:\((?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+(?:,(?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+)+\))|(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*))(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?)|(?:\b(?:bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var|void|class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b)|(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)\s*(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\bnew\s*\(\s*\)))(?:\s*,\s*(?:(?:(?:(?:\((?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+(?:,(?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+)+\))|(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*))(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?)|(?:\b(?:bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var|void|class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b)|(?:\bnew\s*\(\s*\))))*(?=\s*(?:where|[{;]|=>|$))", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["record-arguments"] = new GrammarToken[]
      {

        new(@"(^(?!new\s*\()(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)\s*)(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))", lookbehind: true, greedy: true, inside: null! /* see below */),
      },
      ["keyword"] = new GrammarToken[]
      {

        new(@"\b(?:bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var|void|class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b", lookbehind: false, greedy: false),
      },
      ["class-name"] = new GrammarToken[]
      {

        new(@"(?:(?:\((?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+(?:,(?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+)+\))|(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*))(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?", lookbehind: false, greedy: true, inside: null! /* see below */),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[,()]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["preprocessor"] = new GrammarToken[]
      {

        new(new Regex(@"(^[\t ]*)#.*", RegexOptions.Compiled | RegexOptions.Multiline), lookbehind: true, greedy: false, alias: new []{"property" }, inside: new Grammar
  {
      ["directive"] = new GrammarToken[]
      {

        new(@"(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b", lookbehind: true, greedy: false, alias: new []{"keyword" }),
      },
  }),
      },
      ["attribute"] = new GrammarToken[]
      {

        new(@"((?:^|[^\s\w>)?])\s*\[\s*)(?:(?:\b(?:assembly|event|field|method|module|param|property|return|type)\b)\s*:\s*)?(?:(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*)(?:\s*\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\([^\s\S]*\))*\))*\))*\))*\))?)(?:\s*,\s*(?:(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*)(?:\s*\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\([^\s\S]*\))*\))*\))*\))*\))?))*(?=\s*\])", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["target"] = new GrammarToken[]
      {

        new(@"^(?:\b(?:assembly|event|field|method|module|param|property|return|type)\b)(?=\s*:)", lookbehind: false, greedy: false, alias: new []{"keyword" }),
      },
      ["attribute-arguments"] = new GrammarToken[]
      {

        new(@"\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\((?:[^""'/()]|(?:\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|(?:""(?:\\.|[^\\""\r\n])*""|'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'))|\([^\s\S]*\))*\))*\))*\))*\)", lookbehind: false, greedy: false, inside: null! /* see below */),
      },
      ["class-name"] = new GrammarToken[]
      {

        new(@"(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\.", lookbehind: false, greedy: false),
      },
  }),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[:,]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["class-name"] = new GrammarToken[]
      {

        new(@"(\busing\s+static\s+)(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*)(?=\s*;)", lookbehind: true, greedy: false, inside: null! /* see below */),
        new(@"(\busing\s+(?:@?\b[A-Za-z_]\w*\b)\s*=\s*)(?:(?:(?:\((?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+(?:,(?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+)+\))|(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*))(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?)(?=\s*;)", lookbehind: true, greedy: false, inside: null! /* see below */),
        new(@"(\busing\s+)(?:@?\b[A-Za-z_]\w*\b)(?=\s*=)", lookbehind: true, greedy: false),
        new(@"(\b(?:\b(?:class|enum|interface|record|struct)\b)\s+)(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)", lookbehind: true, greedy: false, inside: null! /* see below */),
        new(@"(\bcatch\s*\(\s*)(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*)", lookbehind: true, greedy: false, inside: null! /* see below */),
        new(@"(\bwhere\s+)(?:@?\b[A-Za-z_]\w*\b)", lookbehind: true, greedy: false),
        new(@"(\b(?:is(?:\s+not)?|as)\s+)(?:(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*)(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?)", lookbehind: true, greedy: false, inside: null! /* see below */),
        new(@"\b(?:(?:(?:\((?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+(?:,(?:[^,()<>[\];=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>)|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|(?:\((?:[^()]|[^\s\S])*\)))*\)))*\)))*\))|(?:\[\s*(?:,\s*)*\]))+)+\))|(?:(?!(?:\b(?:class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b))(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?)(?:\s*\.\s*(?:(?:@?\b[A-Za-z_]\w*\b)(?:\s*(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|(?:<(?:[^<>;=+\-*/%&|^]|[^\s\S])*>))*>))*>))*>))?))*))(?:\s*(?:\?\s*)?(?:\[\s*(?:,\s*)*\]))*(?:\s*\?)?)(?=\s+(?!(?:\b(?:bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var|void|class|enum|interface|record|struct|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b)|with\s*\{)(?:@?\b[A-Za-z_]\w*\b)(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))", lookbehind: false, greedy: false, inside: null! /* see below */),
      },
      ["keyword"] = new GrammarToken[]
      {

        new(@"\b(?:bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var|void|class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b", lookbehind: false, greedy: false),
      },
      ["boolean"] = new GrammarToken[]
      {

        new(@"\b(?:false|true)\b", lookbehind: false, greedy: false),
      },
      ["function"] = new GrammarToken[]
      {

        new(@"\b\w+(?=\()", lookbehind: false, greedy: false),
      },
      ["range"] = new GrammarToken[]
      {

        new(@"\.\.", lookbehind: false, greedy: false, alias: new []{"operator" }),
      },
      ["number"] = new GrammarToken[]
      {

        new(new Regex(@"(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@">>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?", lookbehind: false, greedy: false),
      },
      ["named-parameter"] = new GrammarToken[]
      {

        new(@"([(,]\s*)(?:@?\b[A-Za-z_]\w*\b)(?=\s*:)", lookbehind: true, greedy: false, alias: new []{"punctuation" }),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\?\.?|::|[{}[\];(),.:]", lookbehind: false, greedy: false),
      },
  }),
      },
  }),
      },
      ["string"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false),
      },
  }),
        null! /* see below */,
      },
      ["char"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["html"] = new GrammarToken[]
      {

        new(@"\B@?(?:<([a-zA-Z][\w:]*)(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*>(?:[^<]|<\/?(?!\1\b)(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*\/?>|<\1(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*>(?:[^<]|<\/?(?!\1\b)(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*\/?>|(?:<\1(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*>(?:[^<]|<\/?(?!\1\b)(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*\/?>|(?:<\1(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*>(?:[^<]|<\/?(?!\1\b)(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*\/?>|(?:<\1(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*>(?:[^<]|<\/?(?!\1\b)(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*\/?>|[^\s\S])*<\/\1\s*>))*<\/\1\s*>))*<\/\1\s*>))*<\/\1\s*>)*<\/\1\s*>|<(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*\/?>)", lookbehind: false, greedy: true, inside: null! /* see below */),
      },
      ["string"] = new GrammarToken[]
      {

        null! /* see below */,
        null! /* see below */,
      },
      ["namespace"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["type-expression"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["return-type"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["constructor-invocation"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["generic-method"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["type-list"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["preprocessor"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["attribute"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["class-name"] = new GrammarToken[]
      {

        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
        null! /* see below */,
      },
      ["keyword"] = new GrammarToken[]
      {

        new(@"\b(?:bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var|void|class|enum|interface|record|struct|add|alias|and|ascending|async|await|by|descending|from(?=\s*(?:\w|$))|get|global|group|into|init(?=\s*;)|join|let|nameof|not|notnull|on|or|orderby|partial|remove|select|set|unmanaged|value|when|where|with(?=\s*{)|abstract|as|base|break|case|catch|checked|const|continue|default|delegate|do|else|event|explicit|extern|finally|fixed|for|foreach|goto|if|implicit|in|internal|is|lock|namespace|new|null|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|try|typeof|unchecked|unsafe|using|virtual|volatile|while|yield)\b", lookbehind: false, greedy: false),
      },
      ["boolean"] = new GrammarToken[]
      {

        new(@"\b(?:false|true)\b", lookbehind: false, greedy: false),
      },
      ["function"] = new GrammarToken[]
      {

        new(@"\b\w+(?=\()", lookbehind: false, greedy: false),
      },
      ["range"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["number"] = new GrammarToken[]
      {

        new(new Regex(@"(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@">>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?", lookbehind: false, greedy: false),
      },
      ["named-parameter"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\?\.?|::|[{}[\];(),.:]", lookbehind: false, greedy: false),
      },
  }),
      },
  }),
    };
    grammar["directive"] = new GrammarToken[]
    {

        new(new Regex(@"^([ \t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\s).*", RegexOptions.Compiled | RegexOptions.Multiline), lookbehind: true, greedy: true, inside: new Grammar
  {
      ["keyword"] = new GrammarToken[]
      {

        new(@"^@\w+", lookbehind: false, greedy: false),
      },
      ["csharp"] = new GrammarToken[]
      {
        null! /* see below */
      },
  }),
    };
    grammar["value"] = new GrammarToken[]
    {

        new(@"(^|[^@])@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/))", lookbehind: true, greedy: true, alias: new []{"variable" }, inside: new Grammar
  {
      ["keyword"] = new GrammarToken[]
      {

        new(@"^@", lookbehind: false, greedy: false),
      },
      ["csharp"] = new GrammarToken[]
      {
        null! /* see below */
      },
  }),
    };
    grammar["delegate-operator"] = new GrammarToken[]
    {

        new(@"(^|[^@])@(?=<)", lookbehind: true, greedy: false, alias: new []{"operator" }),
    };
    grammar["prolog"] = new GrammarToken[]
    {

        new(@"<\?[\s\S]+?\?>", lookbehind: false, greedy: true),
    };
    grammar["doctype"] = new GrammarToken[]
    {

        new(new Regex(@"<!DOCTYPE(?:[^>""'[\]]|""[^""]*""|'[^']*')+(?:\[(?:[^<""'\]]|""[^""]*""|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: true, inside: new Grammar
  {
      ["internal-subset"] = new GrammarToken[]
      {

        new(@"(^[^\[]*\[)[\s\S]+(?=\]>$)", lookbehind: true, greedy: true, inside: null! /* see below */),
      },
      ["string"] = new GrammarToken[]
      {

        new(@"""[^""]*""|'[^']*'", lookbehind: false, greedy: true),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^<!|>$|[[\]]", lookbehind: false, greedy: false),
      },
      ["doctype-tag"] = new GrammarToken[]
      {

        new(new Regex(@"^DOCTYPE", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
      ["name"] = new GrammarToken[]
      {

        new(@"[^\s<>'""]+", lookbehind: false, greedy: false),
      },
  }),
    };
    grammar["style"] = new GrammarToken[]
    {

        new(new Regex(@"(<style[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/style>)", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: true, inside: new Grammar
  {
      ["included-cdata"] = new GrammarToken[]
      {

        new(new Regex(@"<!\[CDATA\[[\s\S]*?\]\]>", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false, inside: new Grammar
  {
      ["language-css"] = new GrammarToken[]
      {

        new(new Regex(@"(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false, inside: new Grammar
  {
      ["comment"] = new GrammarToken[]
      {

        new(@"\/\*[\s\S]*?\*\/", lookbehind: false, greedy: false),
      },
      ["atrule"] = new GrammarToken[]
      {

        new(@"@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["rule"] = new GrammarToken[]
      {

        new(@"^@[\w-]+", lookbehind: false, greedy: false),
      },
      ["selector-function-argument"] = new GrammarToken[]
      {

        new(@"(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))", lookbehind: true, greedy: false, alias: new []{"selector" }, inside: new Grammar
  {
      ["pseudo-element"] = new GrammarToken[]
      {

        new(@":(?:after|before|first-letter|first-line|selection)|::[-\w]+", lookbehind: false, greedy: false),
      },
      ["pseudo-class"] = new GrammarToken[]
      {

        new(@":[-\w]+", lookbehind: false, greedy: false),
      },
      ["class"] = new GrammarToken[]
      {

        new(@"\.[-\w]+", lookbehind: false, greedy: false),
      },
      ["id"] = new GrammarToken[]
      {

        new(@"#[-\w]+", lookbehind: false, greedy: false),
      },
      ["attribute"] = new GrammarToken[]
      {

        new(@"\[(?:[^[\]""']|(""|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1)*\]", lookbehind: false, greedy: true, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^\[|\]$", lookbehind: false, greedy: false),
      },
      ["case-sensitivity"] = new GrammarToken[]
      {

        new(new Regex(@"(\s)[si]$", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false, alias: new []{"keyword" }),
      },
      ["namespace"] = new GrammarToken[]
      {

        new(@"^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\|$", lookbehind: false, greedy: false),
      },
  }),
      },
      ["attr-name"] = new GrammarToken[]
      {

        new(@"^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+", lookbehind: true, greedy: false),
      },
      ["attr-value"] = new GrammarToken[]
      {

        new(@"(""|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1", lookbehind: false, greedy: false),
        new(@"(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)", lookbehind: true, greedy: false),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@"[|~*^$]?=", lookbehind: false, greedy: false),
      },
  }),
      },
      ["n-th"] = new GrammarToken[]
      {

        new(@"(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["number"] = new GrammarToken[]
      {

        new(@"[\dn]+", lookbehind: false, greedy: false),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@"[+-]", lookbehind: false, greedy: false),
      },
  }),
        new(new Regex(@"(\(\s*)(?:even|odd)(?=\s*\))", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false),
      },
      ["combinator"] = new GrammarToken[]
      {

        new(@">|\+|~|\|\|", lookbehind: false, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[(),]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["keyword"] = new GrammarToken[]
      {

        new(@"(^|[^\w-])(?:and|not|only|or)(?![\w-])", lookbehind: true, greedy: false),
      },
      Reset = null! /* see below */,
  }),
      },
      ["url"] = new GrammarToken[]
      {

        new(new Regex(@"\burl\((?:(?:""(?:\\(?:\r\n|[\s\S])|[^""\\\r\n])*""|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')|(?:[^\\\r\n()""']|\\[\s\S])*)\)", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: true, inside: new Grammar
  {
      ["function"] = new GrammarToken[]
      {

        new(new Regex(@"^url", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^\(|\)$", lookbehind: false, greedy: false),
      },
      ["string"] = new GrammarToken[]
      {

        new(@"^(?:""(?:\\(?:\r\n|[\s\S])|[^""\\\r\n])*""|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')$", lookbehind: false, greedy: false, alias: new []{"url" }),
      },
  }),
      },
      ["selector"] = new GrammarToken[]
      {

        new(@"(^|[{}\s])[^{}\s](?:[^{};""'\s]|\s+(?![\s{])|(?:""(?:\\(?:\r\n|[\s\S])|[^""\\\r\n])*""|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*'))*(?=\s*\{)", lookbehind: true, greedy: false, inside: null! /* see below */),
      },
      ["string"] = new GrammarToken[]
      {

        new(@"(?:""(?:\\(?:\r\n|[\s\S])|[^""\\\r\n])*""|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')", lookbehind: false, greedy: true),
      },
      ["variable"] = new GrammarToken[]
      {

        new(new Regex(@"(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false),
      },
      ["property"] = new GrammarToken[]
      {

        new(new Regex(@"(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false),
      },
      ["important"] = new GrammarToken[]
      {

        new(new Regex(@"!important\b", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@"(\s)[+\-*\/](?=\s)", lookbehind: true, greedy: false),
      },
      ["hexcode"] = new GrammarToken[]
      {

        new(new Regex(@"\B#[\da-f]{3,8}\b", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false, alias: new []{"color" }),
      },
      ["color"] = new GrammarToken[]
      {

        new(new Regex(@"(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false),
        new(new Regex(@"\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false, inside: new Grammar
  {
      ["unit"] = new GrammarToken[]
      {

        new(@"(\b\d+)(?:%|[a-z]+(?![\w-]))", lookbehind: true, greedy: false),
      },
      ["number"] = new GrammarToken[]
      {

        new(@"(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)", lookbehind: true, greedy: false),
      },
      ["function"] = new GrammarToken[]
      {

        new(@"[\w-]+(?=\()", lookbehind: false, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[(),]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["entity"] = new GrammarToken[]
      {

        new(new Regex(@"\\[\da-f]{1,8}", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
      ["unit"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["number"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["function"] = new GrammarToken[]
      {

        new(new Regex(@"(^|[^-a-z0-9])[-a-z0-9]+(?=\()", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[(){};:,]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["cdata"] = new GrammarToken[]
      {

        new(new Regex(@"^<!\[CDATA\[|\]\]>$", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
  }),
      },
      ["language-css"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, inside: null! /* see below */),
      },
  }),
    };
    grammar["script"] = new GrammarToken[]
    {

        new(new Regex(@"(<script[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/script>)", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: true, inside: new Grammar
  {
      ["included-cdata"] = new GrammarToken[]
      {

        new(new Regex(@"<!\[CDATA\[[\s\S]*?\]\]>", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false, inside: new Grammar
  {
      ["language-javascript"] = new GrammarToken[]
      {

        new(new Regex(@"(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false, inside: new Grammar
  {
      ["doc-comment"] = new GrammarToken[]
      {

        new(@"(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)", lookbehind: true, greedy: false, alias: new []{"comment" }, inside: new Grammar
  {
      Reset = new Grammar
  {
      ["parameter"] = new GrammarToken[]
      {

        new(@"(@(?:arg|argument|param|property)\s+(?:\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}\s+)?)(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\.", lookbehind: false, greedy: false),
      },
  }),
      },
      ["optional-parameter"] = new GrammarToken[]
      {

        new(@"(@(?:arg|argument|param|property)\s+(?:\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}\s+)?)\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["parameter"] = new GrammarToken[]
      {

        new(@"(^\[)[$\w\xA0-\uFFFF\.]+", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\.", lookbehind: false, greedy: false),
      },
  }),
      },
      ["code"] = new GrammarToken[]
      {

        new(@"(=)[\s\S]*(?=\]$)", lookbehind: true, greedy: false, alias: new []{"language-javascript" }, inside: null! /* see below */),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[=[\]]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["class-name"] = new GrammarToken[]
      {

        new(@"(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\.", lookbehind: false, greedy: false),
      },
  }),
        new(@"(@[a-z]+\s+)\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["string"] = new GrammarToken[]
      {

        new(@"([""'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1", lookbehind: false, greedy: true),
      },
      ["number"] = new GrammarToken[]
      {

        new(@"(^|[^\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?|\d+(?:_\d+)*n|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?)(?![\w$])", lookbehind: true, greedy: false),
      },
      ["boolean"] = new GrammarToken[]
      {

        new(@"\b(?:false|true)\b", lookbehind: false, greedy: false),
      },
      ["keyword"] = new GrammarToken[]
      {

        new(@"((?:^|\})\s*)catch\b", lookbehind: true, greedy: false),
        new(@"(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['""]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b", lookbehind: true, greedy: false),
        new(@"\b(?:abstract|declare|is|keyof|readonly|require)\b", lookbehind: false, greedy: false),
        new(@"\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))", lookbehind: false, greedy: false),
        new(@"\btype\b(?=\s*(?:[\{*]|$))", lookbehind: false, greedy: false),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@"=>|\.\.\.|[&|?:*]", lookbehind: false, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[.,;=<>{}()[\]]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["example"] = new GrammarToken[]
      {

        new(@"(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["code"] = new GrammarToken[]
      {

        new(new Regex(@"^([\t ]*(?:\*\s*)?)\S.*$", RegexOptions.Compiled | RegexOptions.Multiline), lookbehind: true, greedy: false, alias: new []{"language-javascript" }, inside: null! /* see below */),
      },
  }),
      },
      ["keyword"] = new GrammarToken[]
      {

        new(new Regex(@"(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b", RegexOptions.Compiled | RegexOptions.Multiline), lookbehind: true, greedy: false),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[{}]", lookbehind: false, greedy: false),
      },
  },
  }),
      },
      ["comment"] = new GrammarToken[]
      {

        new(@"(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)", lookbehind: true, greedy: true),
        new(@"(^|[^\\:])\/\/.*", lookbehind: true, greedy: true),
      },
      ["hashbang"] = new GrammarToken[]
      {

        new(@"^#!.*", lookbehind: false, greedy: true, alias: new []{"comment" }),
      },
      ["template-string"] = new GrammarToken[]
      {

        new(@"((?:\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes))\s*)`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["template-punctuation"] = new GrammarToken[]
      {

        new(@"^`|`$", lookbehind: false, greedy: false, alias: new []{"string" }),
      },
      ["embedded-code"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"css" }),
      },
  }),
        new(@"((?:\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=)\s*)`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["template-punctuation"] = new GrammarToken[]
      {

        new(@"^`|`$", lookbehind: false, greedy: false, alias: new []{"string" }),
      },
      ["embedded-code"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"html" }),
      },
  }),
        new(@"((?:\bsvg)\s*)`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["template-punctuation"] = new GrammarToken[]
      {

        new(@"^`|`$", lookbehind: false, greedy: false, alias: new []{"string" }),
      },
      ["embedded-code"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"svg" }),
      },
  }),
        new(@"((?:\b(?:markdown|md))\s*)`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["template-punctuation"] = new GrammarToken[]
      {

        new(@"^`|`$", lookbehind: false, greedy: false, alias: new []{"string" }),
      },
      ["embedded-code"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"markdown" }),
      },
  }),
        new(@"((?:\b(?:gql|graphql(?:\s*\.\s*experimental)?))\s*)`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["template-punctuation"] = new GrammarToken[]
      {

        new(@"^`|`$", lookbehind: false, greedy: false, alias: new []{"string" }),
      },
      ["embedded-code"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"graphql" }),
      },
  }),
        new(@"((?:\bsql)\s*)`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["template-punctuation"] = new GrammarToken[]
      {

        new(@"^`|`$", lookbehind: false, greedy: false, alias: new []{"string" }),
      },
      ["embedded-code"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, alias: new []{"sql" }),
      },
  }),
        new(@"`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`", lookbehind: false, greedy: true, inside: new Grammar
  {
      ["template-punctuation"] = new GrammarToken[]
      {

        new(@"^`|`$", lookbehind: false, greedy: false, alias: new []{"string" }),
      },
      ["interpolation"] = new GrammarToken[]
      {

        new(@"((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["interpolation-punctuation"] = new GrammarToken[]
      {

        new(@"^\$\{|\}$", lookbehind: false, greedy: false, alias: new []{"punctuation" }),
      },
      Reset = null! /* see below */,
  }),
      },
      ["string"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false),
      },
  }),
      },
      ["string-property"] = new GrammarToken[]
      {

        new(new Regex(@"((?:^|[,{])[ \t]*)([""'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)", RegexOptions.Compiled | RegexOptions.Multiline), lookbehind: true, greedy: true, alias: new []{"property" }),
      },
      ["string"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["class-name"] = new GrammarToken[]
      {

        new(@"(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[.\\]", lookbehind: false, greedy: false),
      },
  }),
        new(@"(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))", lookbehind: true, greedy: false),
      },
      ["regex"] = new GrammarToken[]
      {

        new(@"((?:^|[^$\w\xA0-\uFFFF.""'\])\s]|\b(?:return|yield))\s*)\/(?:(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}|(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7})(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))", lookbehind: true, greedy: true, inside: new Grammar
  {
      ["regex-source"] = new GrammarToken[]
      {

        new(@"^(\/)[\s\S]+(?=\/[a-z]*$)", lookbehind: true, greedy: false, alias: new []{"language-regex" }, inside: new Grammar
  {
      ["char-class"] = new GrammarToken[]
      {

        new(@"((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["char-class-negation"] = new GrammarToken[]
      {

        new(@"(^\[)\^", lookbehind: true, greedy: false, alias: new []{"operator" }),
      },
      ["char-class-punctuation"] = new GrammarToken[]
      {

        new(@"^\[|\]$", lookbehind: false, greedy: false, alias: new []{"punctuation" }),
      },
      ["range"] = new GrammarToken[]
      {

        new(@"(?:[^\\-]|\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.))-(?:[^\\-]|\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.))", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["escape"] = new GrammarToken[]
      {

        new(@"\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)", lookbehind: false, greedy: false),
      },
      ["range-punctuation"] = new GrammarToken[]
      {

        new(@"-", lookbehind: false, greedy: false, alias: new []{"operator" }),
      },
  }),
      },
      ["special-escape"] = new GrammarToken[]
      {

        new(@"\\[\\(){}[\]^$+*?|.]", lookbehind: false, greedy: false, alias: new []{"escape" }),
      },
      ["char-set"] = new GrammarToken[]
      {

        new(new Regex(@"\\[wsd]|\\p\{[^{}]+\}", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false, alias: new []{"class-name" }),
      },
      ["escape"] = new GrammarToken[]
      {

        new(@"\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)", lookbehind: false, greedy: false),
      },
  }),
      },
      ["special-escape"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["char-set"] = new GrammarToken[]
      {

        new(new Regex(@"\.|\\[wsd]|\\p\{[^{}]+\}", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false, alias: new []{"class-name" }),
      },
      ["backreference"] = new GrammarToken[]
      {

        new(@"\\(?![123][0-7]{2})[1-9]", lookbehind: false, greedy: false, alias: new []{"keyword" }),
        new(@"\\k<[^<>']+>", lookbehind: false, greedy: false, alias: new []{"keyword" }, inside: new Grammar
  {
      ["group-name"] = new GrammarToken[]
      {

        new(@"(<|')[^<>']+(?=[>']$)", lookbehind: true, greedy: false, alias: new []{"variable" }),
      },
  }),
      },
      ["anchor"] = new GrammarToken[]
      {

        new(@"[$^]|\\[ABbGZz]", lookbehind: false, greedy: false, alias: new []{"function" }),
      },
      ["escape"] = new GrammarToken[]
      {

        new(@"\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)", lookbehind: false, greedy: false),
      },
      ["group"] = new GrammarToken[]
      {

        new(@"\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?", lookbehind: false, greedy: false, alias: new []{"punctuation" }, inside: new Grammar
  {
      ["group-name"] = new GrammarToken[]
      {
        null! /* see below */
      },
  }),
        new(@"\)", lookbehind: false, greedy: false, alias: new []{"punctuation" }),
      },
      ["quantifier"] = new GrammarToken[]
      {

        new(@"(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?", lookbehind: false, greedy: false, alias: new []{"number" }),
      },
      ["alternation"] = new GrammarToken[]
      {

        new(@"\|", lookbehind: false, greedy: false, alias: new []{"keyword" }),
      },
  }),
      },
      ["regex-delimiter"] = new GrammarToken[]
      {

        new(@"^\/|\/$", lookbehind: false, greedy: false),
      },
      ["regex-flags"] = new GrammarToken[]
      {

        new(@"^[a-z]+$", lookbehind: false, greedy: false),
      },
  }),
      },
      ["method-variable"] = new GrammarToken[]
      {

        new(@"(\.\s*)#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))", lookbehind: true, greedy: false, alias: new []{"function-variable , method , function , property-access" }, inside: new Grammar
  {
      ["maybe-class-name"] = new GrammarToken[]
      {

        new(@"^[A-Z][\s\S]*", lookbehind: false, greedy: false),
      },
  }),
      },
      ["function-variable"] = new GrammarToken[]
      {

        new(@"#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))", lookbehind: false, greedy: false, alias: new []{"function" }, inside: new Grammar
  {
      ["maybe-class-name"] = new GrammarToken[]
      {

        new(@"^[A-Z][\s\S]*", lookbehind: false, greedy: false),
      },
  }),
      },
      ["parameter"] = new GrammarToken[]
      {

        new(@"(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))", lookbehind: true, greedy: false, inside: null! /* see below */),
        new(new Regex(@"(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false, inside: null! /* see below */),
        new(@"(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)", lookbehind: true, greedy: false, inside: null! /* see below */),
        new(@"((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)", lookbehind: true, greedy: false, inside: null! /* see below */),
      },
      ["known-class-name"] = new GrammarToken[]
      {

        new(@"\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b", lookbehind: false, greedy: false, alias: new []{"class-name" }),
        new(@"\b(?:[A-Z]\w*)Error\b", lookbehind: false, greedy: false, alias: new []{"class-name" }),
      },
      ["constant"] = new GrammarToken[]
      {

        new(@"\b[A-Z](?:[A-Z_]|\dx?)*\b", lookbehind: false, greedy: false),
      },
      ["imports"] = new GrammarToken[]
      {

        new(@"(\bimport\b\s*)(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*,\s*(?:\*\s*as\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*|\{[^{}]*\}))?|\*\s*as\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*|\{[^{}]*\})(?=\s*\bfrom\b)", lookbehind: true, greedy: false, inside: null! /* see below */),
      },
      ["exports"] = new GrammarToken[]
      {

        new(@"(\bexport\b\s*)(?:\*(?:\s*as\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?(?=\s*\bfrom\b)|\{[^{}]*\})", lookbehind: true, greedy: false, inside: null! /* see below */),
      },
      ["keyword"] = new GrammarToken[]
      {

        new(@"\b(?:as|default|export|from|import)\b", lookbehind: false, greedy: false, alias: new []{"module" }),
        new(@"\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b", lookbehind: false, greedy: false, alias: new []{"control-flow" }),
        new(@"\bnull\b", lookbehind: false, greedy: false, alias: new []{"null , nil" }),
        new(@"\bundefined\b", lookbehind: false, greedy: false, alias: new []{"nil" }),
        new(@"((?:^|\})\s*)catch\b", lookbehind: true, greedy: false),
        new(@"(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['""]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b", lookbehind: true, greedy: false),
      },
      ["boolean"] = new GrammarToken[]
      {

        new(@"\b(?:false|true)\b", lookbehind: false, greedy: false),
      },
      ["method"] = new GrammarToken[]
      {

        new(@"(\.\s*)#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()", lookbehind: true, greedy: false, alias: new []{"function , property-access" }, inside: new Grammar
  {
      ["maybe-class-name"] = new GrammarToken[]
      {

        new(@"^[A-Z][\s\S]*", lookbehind: false, greedy: false),
      },
  }),
      },
      ["function"] = new GrammarToken[]
      {

        new(@"#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["maybe-class-name"] = new GrammarToken[]
      {

        new(@"^[A-Z][\s\S]*", lookbehind: false, greedy: false),
      },
  }),
      },
      ["number"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["literal-property"] = new GrammarToken[]
      {

        new(new Regex(@"((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)", RegexOptions.Compiled | RegexOptions.Multiline), lookbehind: true, greedy: false, alias: new []{"property" }),
      },
      ["spread"] = new GrammarToken[]
      {

        new(@"\.{3}", lookbehind: false, greedy: false, alias: new []{"operator" }),
      },
      ["arrow"] = new GrammarToken[]
      {

        new(@"=>", lookbehind: false, greedy: false, alias: new []{"operator" }),
      },
      ["operator"] = new GrammarToken[]
      {

        new(@"--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]", lookbehind: false, greedy: false),
      },
      ["property-access"] = new GrammarToken[]
      {

        new(@"(\.\s*)#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*", lookbehind: true, greedy: false, inside: new Grammar
  {
      ["maybe-class-name"] = new GrammarToken[]
      {

        new(@"^[A-Z][\s\S]*", lookbehind: false, greedy: false),
      },
  }),
      },
      ["maybe-class-name"] = new GrammarToken[]
      {

        new(@"(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+", lookbehind: true, greedy: false),
      },
      ["dom"] = new GrammarToken[]
      {

        new(@"\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b", lookbehind: false, greedy: false, alias: new []{"variable" }),
      },
      ["console"] = new GrammarToken[]
      {

        new(@"\bconsole(?=\s*\.)", lookbehind: false, greedy: false, alias: new []{"class-name" }),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"[{}[\];(),.:]", lookbehind: false, greedy: false),
      },
  }),
      },
      ["cdata"] = new GrammarToken[]
      {

        new(new Regex(@"^<!\[CDATA\[|\]\]>$", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
  }),
      },
      ["language-javascript"] = new GrammarToken[]
      {

        new(@"[\s\S]+", lookbehind: false, greedy: false, inside: null! /* see below */),
      },
  }),
    };
    grammar["cdata"] = new GrammarToken[]
    {

        new(new Regex(@"<!\[CDATA\[[\s\S]*?\]\]>", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: true),
    };
    grammar["tag"] = new GrammarToken[]
    {

        new(@"<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])|(?=[\s/>])))+)?\s*\/?>", lookbehind: false, greedy: true, inside: new Grammar
  {
      ["tag"] = new GrammarToken[]
      {

        new(@"^<\/?[^\s>\/]+", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^<\/?", lookbehind: false, greedy: false),
      },
      ["namespace"] = new GrammarToken[]
      {

        new(@"^[^\s>\/:]+:", lookbehind: false, greedy: false),
      },
  }),
      },
      ["special-attr"] = new GrammarToken[]
      {

        new(new Regex(@"(^|[""'\s])(?:style)\s*=\s*(?:""[^""]*""|'[^']*'|[^\s'"">=]+(?=[\s>]))", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false, inside: new Grammar
  {
      ["attr-name"] = new GrammarToken[]
      {

        new(@"^[^\s=]+", lookbehind: false, greedy: false),
      },
      ["attr-value"] = new GrammarToken[]
      {

        new(@"=[\s\S]+", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["value"] = new GrammarToken[]
      {

        new(@"(^=\s*([""']|(?![""'])))\S[\s\S]*(?=\2$)", lookbehind: true, greedy: false, alias: new []{"css , language-css" }, inside: null! /* see below */),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^=", lookbehind: false, greedy: false, alias: new []{"attr-equals" }),
        new(@"""|'", lookbehind: false, greedy: false),
      },
  }),
      },
  }),
        new(new Regex(@"(^|[""'\s])(?:on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel))\s*=\s*(?:""[^""]*""|'[^']*'|[^\s'"">=]+(?=[\s>]))", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: true, greedy: false, inside: new Grammar
  {
      ["attr-name"] = new GrammarToken[]
      {

        new(@"^[^\s=]+", lookbehind: false, greedy: false),
      },
      ["attr-value"] = new GrammarToken[]
      {

        new(@"=[\s\S]+", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["value"] = new GrammarToken[]
      {

        new(@"(^=\s*([""']|(?![""'])))\S[\s\S]*(?=\2$)", lookbehind: true, greedy: false, alias: new []{"javascript , language-javascript" }, inside: null! /* see below */),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^=", lookbehind: false, greedy: false, alias: new []{"attr-equals" }),
        new(@"""|'", lookbehind: false, greedy: false),
      },
  }),
      },
  }),
      },
      ["attr-value"] = new GrammarToken[]
      {

        new(@"=\s*(?:""[^""@]*""|'[^'@]*'|[^\s'""@>=]+(?=[\s>])|[""'][^""'@]*(?:(?:@(?![\w()])|@(?:await\b\s*)?(?:(?!await\b)\w+\b|\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\))(?:[?!]?\.\w+\b|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:<(?:[^<>'""@/]|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*>))*>)?\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\((?:[^()'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\)))*\)))*\)))*\)|\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|(?:\[(?:[^\[\]'""@/]|(?:@(?!"")|""(?:[^\r\n\\""]|\\.)*""|@""(?:[^\\""]|""""|\\[\s\S])*""(?!"")|'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!'))))|(?:\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\/)|[^\s\S])*\]))*\])*(?![?!\.(\[]|<(?!\/)))[^""'@]*)+[""'])", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["value"] = new GrammarToken[]
      {
        null! /* see below */
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"^=", lookbehind: false, greedy: false, alias: new []{"attr-equals" }),
        new(@"""|'", lookbehind: false, greedy: false),
      },
      ["entity"] = new GrammarToken[]
      {

        new(new Regex(@"&[\da-z]{1,8};", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false, alias: new []{"named-entity" }),
        new(new Regex(@"&#x?[\da-f]{1,8};", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
      },
  }),
      },
      ["punctuation"] = new GrammarToken[]
      {

        new(@"\/?>", lookbehind: false, greedy: false),
      },
      ["attr-name"] = new GrammarToken[]
      {

        new(@"[^\s>\/]+", lookbehind: false, greedy: false, inside: new Grammar
  {
      ["namespace"] = new GrammarToken[]
      {

        new(@"^[^\s>\/:]+:", lookbehind: false, greedy: false),
      },
  }),
      },
  }),
    };
    grammar["entity"] = new GrammarToken[]
    {

        null! /* see below */,
        new(new Regex(@"&#x?[\da-f]{1,8};", RegexOptions.Compiled | RegexOptions.IgnoreCase), lookbehind: false, greedy: false),
    };
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["comment"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["comment"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["comment"][1] = grammar["block"][0].Inside!["csharp"][0].Inside!["comment"][1];
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["interpolation-string"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["interpolation-string"][1].Inside!["interpolation"][0].Inside!["expression"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["return-type"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["constructor-invocation"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["generic-method"][0].Inside!["generic"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-list"][0].Inside!["record-arguments"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-list"][0].Inside!["class-name"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["attribute"][0].Inside!["attribute-arguments"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][0].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][1].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][3].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][4].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][6].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][7].Inside = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0].Inside!;
    grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][1] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["interpolation-string"][1];
    grammar["block"][0].Inside!["csharp"][0].Inside!["char"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["char"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["html"][0].Inside = grammar;
    grammar["block"][0].Inside!["csharp"][0].Inside!["string"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["string"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["string"][1] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["string"][1];
    grammar["block"][0].Inside!["csharp"][0].Inside!["namespace"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["namespace"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["type-expression"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-expression"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["return-type"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["return-type"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["constructor-invocation"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["constructor-invocation"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["generic-method"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["generic-method"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["type-list"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["type-list"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["preprocessor"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["preprocessor"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["attribute"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["attribute"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][1] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][1];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][2] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][2];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][3] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][3];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][4] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][4];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][5] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][5];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][6] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][6];
    grammar["block"][0].Inside!["csharp"][0].Inside!["class-name"][7] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["class-name"][7];
    grammar["block"][0].Inside!["csharp"][0].Inside!["range"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["range"][0];
    grammar["block"][0].Inside!["csharp"][0].Inside!["named-parameter"][0] = grammar["block"][0].Inside!["csharp"][0].Inside!["interpolation-string"][0].Inside!["interpolation"][0].Inside!["expression"][0].Inside!["named-parameter"][0];
    grammar["directive"][0].Inside!["csharp"][0] = grammar["block"][0].Inside!["csharp"][0];
    grammar["value"][0].Inside!["csharp"][0] = grammar["block"][0].Inside!["csharp"][0];
    grammar["doctype"][0].Inside!["internal-subset"][0].Inside = grammar;
    grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!["atrule"][0].Inside!.Reset = grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!;
    grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!["selector"][0].Inside = grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!["atrule"][0].Inside!["selector-function-argument"][0].Inside!;
    grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!["unit"][0] = grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!["color"][1].Inside!["unit"][0];
    grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!["number"][0] = grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!["color"][1].Inside!["number"][0];
    grammar["style"][0].Inside!["language-css"][0].Inside = grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["doc-comment"][0].Inside!.Reset!["optional-parameter"][0].Inside!["code"][0].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["doc-comment"][0].Inside!.Reset!["example"][0].Inside!["code"][0].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["template-string"][6].Inside!["interpolation"][0].Inside!.Reset = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["string"][0] = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["doc-comment"][0].Inside!.Reset!["class-name"][1].Inside!["string"][0];
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["regex"][0].Inside!["regex-source"][0].Inside!["special-escape"][0] = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["regex"][0].Inside!["regex-source"][0].Inside!["char-class"][0].Inside!["special-escape"][0];
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["regex"][0].Inside!["regex-source"][0].Inside!["group"][0].Inside!["group-name"][0] = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["regex"][0].Inside!["regex-source"][0].Inside!["backreference"][1].Inside!["group-name"][0];
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["parameter"][0].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["parameter"][1].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["parameter"][2].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["parameter"][3].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["imports"][0].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["exports"][0].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["number"][0] = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!["doc-comment"][0].Inside!.Reset!["class-name"][1].Inside!["number"][0];
    grammar["script"][0].Inside!["language-javascript"][0].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["tag"][0].Inside!["special-attr"][0].Inside!["attr-value"][0].Inside!["value"][0].Inside = grammar["style"][0].Inside!["included-cdata"][0].Inside!["language-css"][0].Inside!;
    grammar["tag"][0].Inside!["special-attr"][1].Inside!["attr-value"][0].Inside!["value"][0].Inside = grammar["script"][0].Inside!["included-cdata"][0].Inside!["language-javascript"][0].Inside!;
    grammar["tag"][0].Inside!["attr-value"][0].Inside!["value"][0] = grammar["value"][0];
    grammar["entity"][0] = grammar["tag"][0].Inside!["attr-value"][0].Inside!["entity"][0];

    return grammar;
  }
}
